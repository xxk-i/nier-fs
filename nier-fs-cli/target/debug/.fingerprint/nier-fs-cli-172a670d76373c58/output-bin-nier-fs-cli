{"message":"`derive` may only be applied to `struct`s, `enum`s and `union`s","code":{"code":"E0774","explanation":"`derive` was applied on something which is not a struct, a union or an enum.\n\nErroneous code example:\n\n```compile_fail,E0774\ntrait Foo {\n    #[derive(Clone)] // error!\n    type Bar;\n}\n```\n\nAs said above, the `derive` attribute is only allowed on structs, unions or\nenums:\n\n```\n#[derive(Clone)] // ok!\nstruct Bar {\n    field: u32,\n}\n```\n\nYou can find more information about `derive` in the [Rust Book].\n\n[Rust Book]: https://doc.rust-lang.org/book/appendix-03-derivable-traits.html\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":138,"byte_end":153,"line_start":11,"line_end":11,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    #[derive(Bpaf)]","highlight_start":5,"highlight_end":20}],"label":"not applicable here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":158,"byte_end":186,"line_start":12,"line_end":12,"column_start":5,"column_end":33,"is_primary":false,"text":[{"text":"    let config = Config().run();","highlight_start":5,"highlight_end":33}],"label":"not a `struct`, `enum` or `union`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0774]\u001b[0m\u001b[0m\u001b[1m: `derive` may only be applied to `struct`s, `enum`s and `union`s\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[derive(Bpaf)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot applicable here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let config = Config().run();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mnot a `struct`, `enum` or `union`\u001b[0m\n\n"}
{"message":"use of undeclared lifetime name `'a`","code":{"code":"E0261","explanation":"An undeclared lifetime was used.\n\nErroneous code example:\n\n```compile_fail,E0261\n// error, use of undeclared lifetime name `'a`\nfn foo(x: &'a str) { }\n\nstruct Foo {\n    // error, use of undeclared lifetime name `'a`\n    x: &'a str,\n}\n```\n\nThese can be fixed by declaring lifetime parameters:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\nfn foo<'a>(x: &'a str) {}\n```\n\nImpl blocks declare lifetime parameters separately. You need to add lifetime\nparameters to an impl block if you're implementing a type that has a lifetime\nparameter of its own.\nFor example:\n\n```compile_fail,E0261\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// error,  use of undeclared lifetime name `'a`\nimpl Foo<'a> {\n    fn foo<'a>(x: &'a str) {}\n}\n```\n\nThis is fixed by declaring the impl block like this:\n\n```\nstruct Foo<'a> {\n    x: &'a str,\n}\n\n// correct\nimpl<'a> Foo<'a> {\n    fn foo(x: &'a str) {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":108,"byte_end":110,"line_start":7,"line_end":7,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"    path: &'a String,","highlight_start":12,"highlight_end":14}],"label":"undeclared lifetime","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing lifetime `'a` here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":74,"byte_end":74,"line_start":5,"line_end":5,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"struct Config {","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0261]\u001b[0m\u001b[0m\u001b[1m: use of undeclared lifetime name `'a`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct Config {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: consider introducing lifetime `'a` here: `<'a>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Path to file\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    path: &'a String,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mundeclared lifetime\u001b[0m\n\n"}
{"message":"expected function, tuple struct or tuple variant, found struct `Config`","code":{"code":"E0423","explanation":"An identifier was used like a function name or a value was expected and the\nidentifier exists but it belongs to a different namespace.\n\nErroneous code example:\n\n```compile_fail,E0423\nstruct Foo { a: bool };\n\nlet f = Foo();\n// error: expected function, tuple struct or tuple variant, found `Foo`\n// `Foo` is a struct name, but this expression uses it like a function name\n```\n\nPlease verify you didn't misspell the name of what you actually wanted to use\nhere. Example:\n\n```\nfn Foo() -> u32 { 0 }\n\nlet f = Foo(); // ok!\n```\n\nIt is common to forget the trailing `!` on macro invocations, which would also\nyield this error:\n\n```compile_fail,E0423\nprintln(\"\");\n// error: expected function, tuple struct or tuple variant,\n// found macro `println`\n// did you mean `println!(...)`? (notice the trailing `!`)\n```\n\nAnother case where this error is emitted is when a value is expected, but\nsomething else is found:\n\n```compile_fail,E0423\npub mod a {\n    pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":61,"byte_end":120,"line_start":5,"line_end":8,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"struct Config {","highlight_start":1,"highlight_end":16},{"text":"    // Path to file","highlight_start":1,"highlight_end":20},{"text":"    path: &'a String,","highlight_start":1,"highlight_end":22},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"`Config` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":"similarly named function `config` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Bpaf)]","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf_derive-0.3.3/src/lib.rs","byte_start":574,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":79,"is_primary":false,"text":[{"text":"pub fn derive_macro(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":171,"byte_end":179,"line_start":12,"line_end":12,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let config = Config().run();","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use struct literal syntax instead","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":171,"byte_end":179,"line_start":12,"line_end":12,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    let config = Config().run();","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":"Config { path: val }","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":171,"byte_end":177,"line_start":12,"line_end":12,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    let config = Config().run();","highlight_start":18,"highlight_end":24}],"label":null,"suggested_replacement":"config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0423]\u001b[0m\u001b[0m\u001b[1m: expected function, tuple struct or tuple variant, found struct `Config`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[derive(Debug, Clone, Bpaf)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `config` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m#[bpaf(options)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct Config {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Path to file\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    path: &'a String,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`Config` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let config = Config().run();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use struct literal syntax instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let config = \u001b[0m\u001b[0m\u001b[38;5;10mConfig { path: val }\u001b[0m\u001b[0m.run();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a function with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let config = \u001b[0m\u001b[0m\u001b[38;5;10mconfig\u001b[0m\u001b[0m().run();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"the trait bound `&String: FromStr` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":"the trait `FromStr` is not implemented for `&String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Bpaf)]","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf_derive-0.3.3/src/lib.rs","byte_start":574,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":79,"is_primary":false,"text":[{"text":"pub fn derive_macro(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `FromStr` is implemented for `String`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `NamedArg::argument`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs","byte_start":12863,"byte_end":12870,"line_start":366,"line_end":366,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"        T: FromStr + 'static,","highlight_start":12,"highlight_end":19}],"label":"required by this bound in `NamedArg::argument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `&String: FromStr` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug, Clone, Bpaf)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `FromStr` is not implemented for `&String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `FromStr` \u001b[0m\u001b[0m\u001b[1mis\u001b[0m\u001b[0m implemented for `\u001b[0m\u001b[0m\u001b[1mString\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `NamedArg::argument`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs:366:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        T: FromStr + 'static,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `NamedArg::argument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Bpaf` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the method `meta` exists for struct `ParseArgument<&String>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":24180,"byte_end":24184,"line_start":677,"line_end":677,"column_start":54,"column_end":58,"is_primary":true,"text":[{"text":"        let meta = $crate::Meta::And(vec![ $($fields.meta()),+ ]);","highlight_start":54,"highlight_end":58}],"label":"method cannot be called on `ParseArgument<&String>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23394,"byte_end":23438,"line_start":657,"line_end":657,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        $crate::__cons_prepare!($ty [ $($fields)* ])","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23107,"byte_end":23175,"line_start":648,"line_end":648,"column_start":9,"column_end":77,"is_primary":false,"text":[{"text":"        $crate::construct!(@prepare $ty [$($fields)* $field] $($($rest)* )?)","highlight_start":9,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":22105,"byte_end":22174,"line_start":628,"line_end":628,"column_start":67,"column_end":136,"is_primary":false,"text":[{"text":"    ($(::)? $ns:ident $(:: $con:ident)* { $($tokens:tt)* }) => {{ $crate::construct!(@prepare [named [$ns $(:: $con)*]] [] $($tokens)*) }};","highlight_start":67,"highlight_end":136}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Bpaf)]","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf_derive-0.3.3/src/lib.rs","byte_start":574,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":79,"is_primary":false,"text":[{"text":"pub fn derive_macro(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"::bpaf::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__cons_prepare!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23818,"byte_end":23845,"line_start":669,"line_end":669,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! __cons_prepare {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs","byte_start":22682,"byte_end":22709,"line_start":664,"line_end":664,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub struct ParseArgument<T> {","highlight_start":1,"highlight_end":28}],"label":"doesn't satisfy `ParseArgument<&String>: bpaf::Parser<&String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`&String: FromStr`\nwhich is required by `ParseArgument<&String>: bpaf::Parser<&String>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `meta` exists for struct `ParseArgument<&String>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug, Clone, Bpaf)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `ParseArgument<&String>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs:664:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m664\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ParseArgument<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `ParseArgument<&String>: bpaf::Parser<&String>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `&String: FromStr`\u001b[0m\n\u001b[0m            which is required by `ParseArgument<&String>: bpaf::Parser<&String>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__cons_prepare` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the method `eval` exists for struct `ParseArgument<&String>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":24283,"byte_end":24287,"line_start":679,"line_end":679,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"            $(let $fields = $fields.eval(args)?;)+","highlight_start":37,"highlight_end":41}],"label":"method cannot be called on `ParseArgument<&String>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23394,"byte_end":23438,"line_start":657,"line_end":657,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        $crate::__cons_prepare!($ty [ $($fields)* ])","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23107,"byte_end":23175,"line_start":648,"line_end":648,"column_start":9,"column_end":77,"is_primary":false,"text":[{"text":"        $crate::construct!(@prepare $ty [$($fields)* $field] $($($rest)* )?)","highlight_start":9,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":22105,"byte_end":22174,"line_start":628,"line_end":628,"column_start":67,"column_end":136,"is_primary":false,"text":[{"text":"    ($(::)? $ns:ident $(:: $con:ident)* { $($tokens:tt)* }) => {{ $crate::construct!(@prepare [named [$ns $(:: $con)*]] [] $($tokens)*) }};","highlight_start":67,"highlight_end":136}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":37,"byte_end":41,"line_start":3,"line_end":3,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Bpaf)]","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Bpaf)]","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf_derive-0.3.3/src/lib.rs","byte_start":574,"byte_end":652,"line_start":24,"line_end":24,"column_start":1,"column_end":79,"is_primary":false,"text":[{"text":"pub fn derive_macro(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"::bpaf::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::construct!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":21972,"byte_end":21994,"line_start":626,"line_end":626,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! construct {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__cons_prepare!","def_site_span":{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/lib.rs","byte_start":23818,"byte_end":23845,"line_start":669,"line_end":669,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"macro_rules! __cons_prepare {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs","byte_start":22682,"byte_end":22709,"line_start":664,"line_end":664,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub struct ParseArgument<T> {","highlight_start":1,"highlight_end":28}],"label":"doesn't satisfy `ParseArgument<&String>: bpaf::Parser<&String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`&String: FromStr`\nwhich is required by `ParseArgument<&String>: bpaf::Parser<&String>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `eval` exists for struct `ParseArgument<&String>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug, Clone, Bpaf)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `ParseArgument<&String>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/grojdg/.cargo/registry/src/github.com-1ecc6299db9ec823/bpaf-0.7.7/src/params.rs:664:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m664\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ParseArgument<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `ParseArgument<&String>: bpaf::Parser<&String>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `&String: FromStr`\u001b[0m\n\u001b[0m            which is required by `ParseArgument<&String>: bpaf::Parser<&String>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__cons_prepare` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0261, E0277, E0423, E0599, E0774.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0261, E0277, E0423, E0599, E0774.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0261`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0261`.\u001b[0m\n"}
